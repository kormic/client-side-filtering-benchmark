enum STRESS_SAMPLE {
  SMALL = 300,
  LARGE = 1000,
  XLARGE = 10000,
}

export const matchesTag = (
  filter: { id: 'string'; type: 'tag' },
  objectType: any
) => filter.type === 'tag' && objectType.tags.includes(filter.id);

export const matchesTypes = (
  filter: { id: string; type: 'namespace' },
  objectType: any
) => filter.type === 'namespace' && objectType.namespace === filter.id;

export const matchesObjectTypes = (
  filter: { id: string; type: 'objectType'; name: string; namespace: string },
  objectType: any
) => filter.type === 'objectType' && objectType.name === filter.name;

export const createObjectTypes = () => {
  const objectTypes = [];

  for (let i = 0; i < STRESS_SAMPLE.XLARGE; i++) {
    objectTypes.push(
      createObjectType({
        id: crypto.randomUUID(),
        name: nameList[Math.floor(Math.random() * nameList.length)] + i,
        namespace: Math.floor(Math.random() * 10) < 7 ? 'not custom' : 'custom',
        tags: [Math.floor(Math.random() * 10) < 5 ? 'tag1' : 'tag2'],
      })
    );
  }

  return objectTypes;
};

export const createObjectType = (overrides = {}) => {
  return {
    id: 'ObjectTypeId',
    changeDate: 0,
    name: 'testObjectType',
    color: 'red',
    creationDate: 0,
    fields: [],
    namespace: 'custom',
    relationships: [],
    tags: [],
    changedBy: {},
    createdBy: {},
    ...overrides,
  };
};

export const intersectionOfTwoArrayOfObjects = <T>(
  arr1: T[],
  arr2: T[],
  key: keyof T
) => arr1.filter((a) => arr2.some((b) => a[key] === b[key]));

const nameList = [
  'Time',
  'Past',
  'Future',
  'Dev',
  'Fly',
  'Flying',
  'Soar',
  'Soaring',
  'Power',
  'Falling',
  'Fall',
  'Jump',
  'Cliff',
  'Mountain',
  'Rend',
  'Red',
  'Blue',
  'Green',
  'Yellow',
  'Gold',
  'Demon',
  'Demonic',
  'Panda',
  'Cat',
  'Kitty',
  'Kitten',
  'Zero',
  'Memory',
  'Trooper',
  'XX',
  'Bandit',
  'Fear',
  'Light',
  'Glow',
  'Tread',
  'Deep',
  'Deeper',
  'Deepest',
  'Mine',
  'Your',
  'Worst',
  'Enemy',
  'Hostile',
  'Force',
  'Video',
  'Game',
  'Donkey',
  'Mule',
  'Colt',
  'Cult',
  'Cultist',
  'Magnum',
  'Gun',
  'Assault',
  'Recon',
  'Trap',
  'Trapper',
  'Redeem',
  'Code',
  'Script',
  'Writer',
  'Near',
  'Close',
  'Open',
  'Cube',
  'Circle',
  'Geo',
  'Genome',
  'Germ',
  'Spaz',
  'Shot',
  'Echo',
  'Beta',
  'Alpha',
  'Gamma',
  'Omega',
  'Seal',
  'Squid',
  'Money',
  'Cash',
  'Lord',
  'King',
  'Duke',
  'Rest',
  'Fire',
  'Flame',
  'Morrow',
  'Break',
  'Breaker',
  'Numb',
  'Ice',
  'Cold',
  'Rotten',
  'Sick',
  'Sickly',
  'Janitor',
  'Camel',
  'Rooster',
  'Sand',
  'Desert',
  'Dessert',
  'Hurdle',
  'Racer',
  'Eraser',
  'Erase',
  'Big',
  'Small',
  'Short',
  'Tall',
  'Sith',
  'Bounty',
  'Hunter',
  'Cracked',
  'Broken',
  'Sad',
  'Happy',
  'Joy',
  'Joyful',
  'Crimson',
  'Destiny',
  'Deceit',
  'Lies',
  'Lie',
  'Honest',
  'Destined',
  'Bloxxer',
  'Hawk',
  'Eagle',
  'Hawker',
  'Walker',
  'Zombie',
  'Sarge',
  'Capt',
  'Captain',
  'Punch',
  'One',
  'Two',
  'Uno',
  'Slice',
  'Slash',
  'Melt',
  'Melted',
  'Melting',
  'Fell',
  'Wolf',
  'Hound',
  'Legacy',
  'Sharp',
  'Dead',
  'Mew',
  'Chuckle',
  'Bubba',
  'Bubble',
  'Sandwich',
  'Smasher',
  'Extreme',
  'Multi',
  'Universe',
  'Ultimate',
  'Death',
  'Ready',
  'Monkey',
  'Elevator',
  'Wrench',
  'Grease',
  'Head',
  'Theme',
  'Grand',
  'Cool',
  'Kid',
  'Boy',
  'Girl',
  'Vortex',
  'Paradox',
];
